@model Improvar.ViewModels.VMRetailOrder
@{
    ViewBag.Title = "Order";
    Layout = null;
    string PageControllerName = "M_GrpMast";
}
<title>@ViewBag.Title</title>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/layout_misc.css" rel="stylesheet" />
<link href="~/Content/swiper-bundle.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/bootstrap.js"></script>
@*<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>*@
<script src="~/Scripts/swiper-bundle.min.js"></script>
<script src="~/Scripts/Custom.js"></script>
<style>
    .swiper {
        width: 100%;
        height: 100%;
    }
    .swiper-slide {
        text-align: center;
        font-size: 18px;
        background: #fff;
        /* Center slide text vertically */
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;
    }

        .swiper-slide img {
            display: block;
            width: 100%;
            height: 100%;
        }

        .swiper-slide .title {
            position: absolute;
            /*top: 210px;
                    left: 10px;*/
            bottom: 40px;
            color: white;
            font-weight: bold;
            font-size: 12pt;
            font-family: 'Mark Bold' !important;
        }
    @@media (min-width: 1200px) {
    body{
            margin-bottom: 24px;
        }
    }
        @@media (max-width: 700px) {
            .mySwiper{
          display: block;
            width: 100%;
           height: 70%;
            }
      .swiper-slide img {
       
        }   
    }

</style>
<script>
    $(document).ready(function () {
        getLocation();
    });

    function GetRetailerInfo() {
        debugger;
        var RetailerName = $("#RetailerName").val();
        var RetailerPin = $("#RetailerPin").val();
        var RetailerGstno = $("#RetailerGstno").val();
        var RetailerCity = $("#RetailerCity").val();
        $.ajax({
            type: 'GET',
            url: "@Url.Action("GetRetailerInfo", PageControllerName)",
            data: {
                RetailerName: RetailerName,
                RetailerPin: RetailerPin,
                RetailerGstno: RetailerGstno,
                RetailerCity: RetailerCity,
            },
            contentType: "application/json",
            success: function (result) {
                if (result.length == 0) {
                    alert('No retailer found !'); return;
                }
                else if (result.length > 1) {
                    var alldata = '';
                    $.each(result, function (index, itemData) {
                        alldata +=((index+1)+". Name:" + itemData.RetailerName+ " Pin:" + itemData.RetailerPin+ " Gst:" + itemData.RetailerGstno+ " City:" + itemData.RetailerCity+" ... ");
                    });
                    alert('Use filter to get accurate data. ' + alldata); return;
                }
                $.each(result, function (index, itemData) {
                    $("#SelectedRetailerCode").val(itemData.RetailerCode);
                    $("#SelectedRetailerName").val(itemData.RetailerName);
                    $("#SelectedRetailerPin").val(itemData.RetailerPin);
                    $("#SelectedRetailerGstno").val(itemData.RetailerGstno);
                    $("#SelectedRetailerCity").val(itemData.RetailerCity);
                    $("#Dstbrslcd").val(itemData.Dstbrslcd);
                    $("#Dstbrslnm").val(itemData.Dstbrslnm);
                });
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function getLocation() {
        if (navigator.geolocation) {
            handlePermission();
            navigator.geolocation.getCurrentPosition(function (position) {
                var lat = position.coords.latitude;
                var lng = position.coords.longitude;
                $("#GEOLONGITUDE").val(lat);
                $("#GEOLATITUDE").val(lng);
                console.log(lat + ',' + lng);
            });
        }
        else {
            console.log("Geolocation is not supported by this browser.");
        }
    }
    //function getLocation() {
    //    if (navigator.geolocation) {
    //        handlePermission();
    //        navigator.geolocation.getCurrentPosition(function (position) {
    //            var lat = position.coords.latitude;
    //            var lng = position.coords.longitude;
    //            $("#GEOLONGITUDE").val(lat);
    //            $("#GEOLATITUDE").val(lng);
    //            console.log(lat + ',' + lng);
    //            var address = '';
    //            var url = "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + lat + "," + lng + "&sensor=true&key=AIzaSyBDxBcnd3Jf8nDInK1xxCSvtRwSiWB4mck";
    //            var xhr = new XMLHttpRequest();
    //            xhr.open('GET', url, true);
    //            xhr.onload = function () {
    //                if (xhr.readyState == 4 && xhr.status == 200) {
    //                    var response = JSON.parse(xhr.responseText);
    //                    address = response.results[0].formatted_address;
    //                    $("#GEOADDRESS").val(address);
    //                }
    //            };
    //            xhr.send(null);

    //        });
    //    }
    //    else {
    //        console.log("Geolocation is not supported by this browser.");
    //    }
    //}
    function handlePermission() {
        navigator.permissions.query({ name: 'geolocation' }).then(function (result) {
            console.log(result.state);
            if (result.state == 'denied') {
                alert('Please allow your location permission');
            }
        });
    }

</script>
<script>
    function TakeOrder() {
        var index1 = swiper.realIndex;
        var sizes = $("#size_" + index1).html();
        var sizearr = sizes.split(',');
        $('#tblSizes > tbody').html('');
        $.each(sizearr, function (index, value) {
            var tr = '<tr><td>' + value + '</td><td> <input type="number" class="form-control"/></td></tr>';
            $('#tblSizes > tbody:last-child').append(tr);
        });
    }
</script>
<script>
    function AddtoCart() {
        getLocation();
        var index = swiper.realIndex;
        var itcd = $("#itcd_" + index).html();
        var styleno = $("#styleno_" + index).html();
        var sizedt = '';
        $('#tblSizes > tbody  > tr').each(function () {
            var SIZE = $(this).find("td").eq(0).html();
            var QNTY = $(this).find("td:eq(1) input[type='number']").val();
            if (sizedt != '') sizedt += ',';
            sizedt += SIZE + '=' + QNTY;
        });
        var tr = '<tr><td>' + itcd + '</td><td>' + styleno + '</td><td>' + sizedt + '</td></tr>';
        $('#tblCart > tbody:last-child').append(tr);
        $('#tblSizes > tbody').html('');
    }

    function SaveData() {
        getLocation();
        if (!emptyFieldCheck("Location not found,Save again", "GEOLONGITUDE")) {
            getLocation();
            return false;
        }
        if (!emptyFieldCheck("Location not found,Save again", "GEOLATITUDE")) {
            getLocation();
            return false;
        }
        if (!emptyFieldCheck("Please select retailer!", "SelectedRetailerCode")) {
            return false;
        }        
        var hdnData1 = '';
        $('#tblCart > tbody  > tr').each(function () {
            var ITCD = $(this).find("td").eq(0).html();
            var QNTY = $(this).find("td").eq(1).html();
            var SIZE = $(this).find("td").eq(2).html();
            if (hdnData1 != '') hdnData1 += ',';
            hdnData1 += "{ 'ITCD': '" + ITCD + "', 'sizes': '" + SIZE + "'  }";
        });

        console.log(hdnData1);
        if (hdnData1 == '') { msgInfo('Data Not found'); return false; }
        $("#ITEMDETAIL_JSTR").val('[' + hdnData1 + ']');

        $.ajax({
            type: 'post',
            url: "@Url.Action("SAVE", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                alert(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
@*@Html.ActionLink("M_GrpMast", "M_GrpMast", "M_GrpMast")*@
<div class="container-fluid">
    <div class="alert alert-info" style="font-size: large;">
        <strong>Order</strong> taken from retailer
    </div>


    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.GEOLONGITUDE)
        @Html.HiddenFor(model => model.GEOLATITUDE)
        @*@Html.HiddenFor(model => model.GEOADDRESS)*@
        @Html.HiddenFor(model => model.ITEMDETAIL_JSTR)
        <div class="row">
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer Name")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.RetailerName, new { htmlAttributes = new { @class = "form-control ", id = "RetailerName", @placeholder = " Retailer Name" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer Pin")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.RetailerPin, new { htmlAttributes = new { @class = "form-control ", id = "RetailerPin", @placeholder = " Retailer Pin", maxlength = 10 } })
                </div>
            </div><div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer Gstno")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.RetailerGstno, new { htmlAttributes = new { @class = "form-control ", id = "RetailerGstno", @placeholder = " Retailer Gstno" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer City")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.RetailerCity, new { htmlAttributes = new { @class = "form-control ", id = "RetailerCity", @placeholder = " Retailer City" } })
                </div>
            </div>
            <button class="btn btn-sm btn-info" onclick="GetRetailerInfo()" type="button">Get Retailer Info</button>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer Code")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerCode, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerCode", @placeholder = "Retailer Code", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", " Name")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerName, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerName", @placeholder = " Retailer Name", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", " Pin")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerPin, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerPin", @placeholder = "Retailer Pin", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", " Gstno")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerGstno, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerGstno", @placeholder = "Retailer Gstno", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", " City")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerCity, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerCity", @placeholder = "Retailer City", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", " Distributor")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.Dstbrslnm, new { htmlAttributes = new { @class = "form-control ", id = "Dstbrslnm", @placeholder = "Retailer City", @readonly = "readonly" } })
                    @Html.HiddenFor(model => model.Dstbrslcd)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="swiper mySwiper">
                <div class="swiper-wrapper">
                    @if (Model.ImageView != null)
                    {
                        for (int i = 0; i < Model.ImageView.Count; i++)
                        {
                            <div class="swiper-slide">
                                <span style="display: none" id="itcd_@i">@Model.ImageView[i].ITCD</span>
                                <span style="display: none" id="size_@i">@Model.ImageView[i].SIZES</span>
                                <div class="title" id="styleno_@i">@Model.ImageView[i].Desc</div>
                                <img src="@Model.ImageView[i].Url" />
                            </div>
                        }
                    }
                </div>
                <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
            </div>
            <script>
                var swiper = new Swiper(".mySwiper", {
                   // autoHeight: true,
                    navigation: {
                        nextEl: ".swiper-button-next",
                        prevEl: ".swiper-button-prev",
                    },
                });
            </script>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="editor-field">
                    <button onclick="TakeOrder()" class="btn btn-sm" style="background-color:#d5c180;color: darkmagenta;" type="button">Take Order</button>
                </div>
            </div>
        </div>
        <div class="row">
            <table class="table table-striped" id="tblSizes">
                <thead>
                    <tr style="background-color: #255994;color: white;"><th>Size</th><th>Qnty</th></tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="editor-field">
                    <button onclick="AddtoCart()" type="button" class="btn btn-sm btn-warning"> Add to Cart </button>
                </div>
            </div>
        </div>
        <input type="hidden" id="hdnData" />
        <div class="row">
            <table class="table table-striped" id="tblCart">
                <thead>
                    <tr style="background-color: #255994;color: white;"><th>Itcd</th><th>Styleno</th><th>Sizes Qnty</th></tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="editor-field">
                    <button onclick="SaveData()" class="btn btn-sm btn-success" type="button">Place Order</button>
                </div>
            </div>
        </div>
    }
</div>
<div class="row">
    <div class="bottomDiv">
        <div class="abc sec1">
            @Session["CompanyName"]
        </div>
        <div class="abc sec2">
            @Session["CompanyLocation"]
        </div>
        <div class="abc sec3">
            Period- @Session["CompanyFinancial"]
        </div>
        <div class="abc sec3_1">
            <a href="/M_RetailOutlet/M_RetailOutlet?op=V&MNUDET=UFJPRE1BU1R+MH5NX0dycE1hc3R+fk1+MH4wfkFFRFY=&US=Q0hFTUtPTEsyMDIxNTc4OTA=&DC=&MP=" target="_blank">Retailer Master</a>
        </div>
        <div class="abc sec4">
            Developed by IPSMART Team
        </div>
    </div>
</div>


