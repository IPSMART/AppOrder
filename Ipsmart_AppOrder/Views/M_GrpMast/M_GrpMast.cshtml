@model Improvar.ViewModels.VMRetailOrder
@{
    ViewBag.Title = "M_GrpMast";
    Layout = null;
    string PageControllerName = "M_GrpMast";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
@*<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@
<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
<script src="~/Scripts/jquery-3.3.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script>
   function GetRetailerInfo()
   {
       var RetailerName=$("#RetailerName").val();
       var RetailerPin=$("#RetailerPin").val();
       var RetailerGstno=$("#RetailerGstno").val();
       var RetailerCity=$("#RetailerCity").val();
       $.ajax({
           type: 'GET',
           url: "@Url.Action("GetRetailerInfo", PageControllerName)",
           data: {
               RetailerName: RetailerName,
               RetailerPin: RetailerPin,
               RetailerGstno: RetailerGstno,
               RetailerCity: RetailerCity,
           },
           contentType:"application/json",
           success: function (result) {
               var isnum = 0;
               console.log('    result.length:'+    result.length);
           
               $.each(result, function(index, itemData) {
                   ++isnum;
                   $("#RetailerName").val(itemData.RetailerName);
                   $("#RetailerPin").val(itemData.RetailerPin);
                   $("#RetailerGstno").val(itemData.RetailerGstno);
                   $("#RetailerCity").val(itemData.RetailerCity);
               });
           },
           error: function (XMLHttpRequest, textStatus, errorThrown) {
               $("#WaitingMode").hide();
               msgError(XMLHttpRequest.responseText);
               $("body span h1").remove(); $("#msgbody_error style").remove();
           }
       });
   }
</script>
@Html.ActionLink("M_RetailOutlet", "M_RetailOutlet", "M_RetailOutlet")
@Html.ActionLink("M_GrpMast", "M_GrpMast", "M_GrpMast")
<div class="container-fluid">
    <h1>Order taken from retailer</h1>
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer Name")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.RetailerName, new { htmlAttributes = new { @class = "form-control ", id = "RetailerName", @placeholder = " Make Code"} })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer Pin")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.RetailerPin, new { htmlAttributes = new { @class = "form-control ", id = "RetailerPin", @placeholder = " Make Code"} })
                </div>
            </div><div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer Gstno")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.RetailerGstno, new { htmlAttributes = new { @class = "form-control ", id = "RetailerGstno", @placeholder = " Make Code"} })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Retailer City")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.RetailerCity, new { htmlAttributes = new { @class = "form-control ", id = "RetailerCity", @placeholder = " Make Code"} })
                </div>
            </div>
            <button onclick="GetRetailerInfo()" type="button">Get Retailer Info</button>
        </div>

        <div class="row">
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Selected Retailer Code")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerName, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerName", @placeholder = " Make Code", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Selected Retailer Name")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerName, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerName", @placeholder = " Make Code", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Selected Retailer Pin")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerPin, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerPin", @placeholder = " Make Code", @readonly = "readonly" } })
                </div>
            </div><div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Selected Retailer Gstno")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerGstno, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerGstno", @placeholder = " Make Code", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field" style="margin-top: 4px;">
                    @Html.Label("", "Selected Retailer City")
                </div>
            </div>
            <div class="col-md-5">
                <div class="editor-field">
                    @Html.EditorFor(model => model.SelectedRetailerCity, new { htmlAttributes = new { @class = "form-control ", id = "SelectedRetailerCity", @placeholder = " Make Code",@readonly="readonly"} })
                </div>
            </div>
        </div>
    }
    <div class="row">
        @*<button onclick="getLocation()">Try It</button>
            <p id="demo"></p>

            <input id="demo1" />*@

        <script>
            var x = document.getElementById("demo");
            function getLocation() {
                // getCity();
                handlePermission();
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition);
                }
                else {
                    x.innerHTML = "Geolocation is not supported by this browser.";
                }
            }

            function showPosition(position) {
                x.innerHTML = "Latitude: " + position.coords.latitude +
                "<br>Longitude: " + position.coords.longitude;
                getAddressFromLatlong(position.coords.latitude, position.coords.longitude);

            }
            function handlePermission() {
                navigator.permissions.query({ name: 'geolocation' }).then(function (result) {
                    console.log(result.state);
                    //navigator.geolocation.getCurrentPosition(function (position) {
                    //    alert('allow');
                    //}, function () {
                    //    alert('deny');
                    //});
                });
            }
            function getAddressFromLatlong(lat, lng) {
                var xhr = new XMLHttpRequest();
                var url = "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + lat + "," + lng + "&sensor=true&key=AIzaSyBDxBcnd3Jf8nDInK1xxCSvtRwSiWB4mck";
                xhr.open('GET', url, true);
                xhr.send();
                // xhr.onreadystatechange = processRequest;
                xhr.addEventListener("readystatechange", processRequest, false);
                function processRequest(e) {
                    //console.log(xhr.responseText);
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        var response = JSON.parse(xhr.responseText);
                        var address = response.results[0].formatted_address;
                        document.getElementById("demo").value = address;
                        return address;
                    }
                }
            }
        </script>
        <!-- Link Swiper's CSS -->
        <!-- Demo styles -->
        <style>
            .swiper {
                width: 100%;
                height: 100%;
            }

            .swiper-slide {
                text-align: center;
                font-size: 18px;
                background: #fff;
                /* Center slide text vertically */
                display: -webkit-box;
                display: -ms-flexbox;
                display: -webkit-flex;
                display: flex;
                -webkit-box-pack: center;
                -ms-flex-pack: center;
                -webkit-justify-content: center;
                justify-content: center;
                -webkit-box-align: center;
                -ms-flex-align: center;
                -webkit-align-items: center;
                align-items: center;
            }

                .swiper-slide img {
                    display: block;
                    width: 100%;
                    height: 100%;
                }

                .swiper-slide .title {
                    position: absolute;
                    /*top: 210px;
                    left: 10px;*/
                    bottom: 40px;
                    color: white;
                    font-weight: bold;
                    font-size: 12pt;
                    font-family: 'Mark Bold' !important;
                }
        </style>
        <div class="swiper mySwiper">
            <div class="swiper-wrapper">
                @if (Model.ImageView != null)
                {
                    for (int i = 0; i < Model.ImageView.Count; i++)
                    {
                        <div class="swiper-slide">
                            <span style="display: none" id="itcd_@i">@Model.ImageView[i].ITCD</span>
                            <div class="title">@Model.ImageView[i].Desc</div>
                            <img src="@Model.ImageView[i].Url" />
                        </div>}
                }
            </div>
            <div class="swiper-button-next"></div>
            <div class="swiper-button-prev"></div>
        </div>

        <!-- Swiper        JS -->
        <!-- Initial        ize Swiper -->
        <script>
                var swiper = new Swiper(".mySwiper", {
                    navigation: {
                        nextEl: ".swiper-button-next",
                        prevEl: ".swiper-button-prev",
                    },
                });
        </script>

        <script>
            function testme() {
                debugger;
                var ttt = $("div.swiper-wrapper > .swiper-slide").html();
                alert(swiper.realIndex);
                alert(ttt);
            }
        </script>
        <br />
        <br />
        <br />

        <input type="text" id="qnty" placeholder="Qnty">

        <button onclick="AddtoCart()">
            AddtoCart
        </button>
        <button onclick="Save()">
            Save
        </button>
        <input type="hidden" id="hdnData" />
        <br />
        <br />
        <br />
        <button onclick="testme()">
            SHOO
        </button>
        <script>
            function AddtoCart() {
                var index = swiper.realIndex;
                var itcd = $("#itcd_" + index).html();
                var qnty = $("#qnty").val();
                var tr = '<tr><td>' + itcd + '</td><td>' + qnty + '</td></tr>';
                $('#tblCart > tbody:last-child').append(tr);
            }

            function SaveData() {
                var hdnData = $("#hdnData").val();
                var hdnData = $("#hdnData").val();
                // str='{'++'}
            }

        </script>
        <table class="table" id="tblCart">
            <thead>
                <tr><th>Itcd</th><th>Qnty</th></tr>
            </thead>
            <tbody>
                @*<tr><td></td><td></td></tr>*@
            </tbody>
        </table>
    </div>
</div>